---
title: About Load Balancers in PKS
owner: PKS
---

<strong><%= modified_date %></strong>

This topic describes the types of load balancers that are used in Pivotal Container Service (PKS).

You can configure load balancers for the following:

* **PKS API**: configuring this load balancer allows you to run PKS Command Line Interface (CLI) commands from your local workstation.
* **Kubernetes Clusters**: configuring a load balancer for each new cluster allows you to access the cluster's master worker VM.
* **Workloads**: configuring a load balancer for your application workloads allows external access to the services that run on your cluster.

If you use either vSphere with NSX-T or GCP, you can create load balancers within your cloud provider console.

If your cloud provider does not offer load balancing, you can use any external TCP or HTTPS load balancer of your choice.

## <a id='pks-api'></a>About the PKS API Load Balancer

The load balancer for the PKS API allows you to access the PKS API from outside the network.
For example, configuring a load balancer for the PKS API allows you to run PKS CLI commands from your local workstation.

For information about configuring the PKS API load balancer, see _Installing and Configuring PKS on [vSphere](installing-pks-vsphere.html#loadbalancer-pks-api) or [GCP](installing-pks-gcp.html#loadbalancer-pks-api)_.

## <a id='cluster'></a>About Kubernetes Cluster Load Balancers

When you create a cluster, you must configure external access to the cluster by creating an external TCP or HTTPS load balancer.
The load balancer allows the Kubernetes CLI (kubectl) to communicate with the cluster.

If you create a cluster in a non-production environment, you can choose not to use a load balancer.
To allow kubectl to access the cluster without a load balancer, you can do one of the following:

* Create a DNS entry that points to the cluster's master VM. For example: <pre>my-cluster.example.com    A    10.0.0.5</pre>
* On the workstation where you run kubectl commands, add the master IP address of your cluster and `kubo.internal` to the `/etc/hosts` file. For example: <pre>10.0.0.5 kubo.internal</pre>

For information about configuring a cluster load balancer, see [Create a Cluster](create-cluster.html).

## <a id='workload'></a>About Workload Load Balancers

To allow external access to your app, you can either create a load balancer or expose a static port on your workload.

For information about configuring a load balancer for your app workload, see [Deploy and Access Basic Workloads](deploy-workloads.html).